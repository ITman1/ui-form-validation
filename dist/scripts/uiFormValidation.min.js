"use strict";var app=angular.module("uiFormValidation",["ngSanitize"]);app.constant("uiFormValidation.validationErrorsModes",{onSubmitAndInvalid:"onSubmitAndInvalid",onDirtyAndInvalid:"onDirtyAndInvalid",onInvalid:"onInvalid"}),app.constant("uiFormValidation.validationNoticeModes",{onSubmitAndInvalid:"onSubmitAndInvalid",onDirtyAndInvalid:"onDirtyAndInvalid",onInvalid:"onInvalid"}),app.factory("uiFormValidation.validationErrorsLocation.after",function(i){return{name:"after",link:function(t,r,o,n){var a=i.get("uiFormValidation.utilsService"),e=o.controlElement;if(n.length>0){var l=a.selectFromScope(e,n[0]);l&&(e=l)}e.after(r)}}}),app.factory("uiFormValidation.validationErrorsLocation.append",function(i){return{name:"append",link:function(t,r,o,n){var a=i.get("uiFormValidation.utilsService"),e=o.controlElement;if(n.length>0){var l=a.selectFromScope(e,n[0]);l&&(e=l)}e.append(r)}}}),app.factory("uiFormValidation.validationErrorsLocation.explicit",function(){return{name:"explicit",compile:function(){return function(){}}}}),app.value("uiFormValidation.validationErrorsLocationFactories",{after:"uiFormValidation.validationErrorsLocation.after",append:"uiFormValidation.validationErrorsLocation.append",explicit:"uiFormValidation.validationErrorsLocation.explicit"}),app.constant("uiFormValidation.supportedValidations",{validateRequired:{validationName:"validateRequired",performableValidation:function(){return!0},validate:function(i){return!!i},errorMessage:function(){return"Field is required."}},validateAdhoc:{validationName:"validateAdhoc",performableValidation:function(){return!0},validate:function(i,t){var r=t.element.attr("validate-adhoc"),o=t.scope.$eval(r);return!o},errorMessage:function(i,t,r){var o=r.controlElement.attr("validate-adhoc"),n=t.$eval(o);return n}},validateLength:{validationName:"validateLength",performableValidation:function(){return!0},validate:function(i,t){return i&&i.length&&i.length>=parseInt(t.element.attr("validate-length"))},errorMessage:function(i,t,r){return"Expected text length with at least "+r.controlElement.attr("validate-length")+" characters."}},validateRegex:{validationName:"validateRegex",performableValidation:function(){return!0},validate:function(i,t){return new RegExp(t.element.attr("validate-regex")).test(i)},errorMessage:function(i,t,r){return"Value does not matches regular expression "+r.controlElement.attr("validate-regex")+"."}}}),app.service("uiFormValidation.utilsService",function($injector){var $this=this;this.validationErrorsControllers={},this.validationControllers={},this.validationControllerInitializationCallbacks={},this.addValidationErrorsController=function(i,t,r){this.validationErrorsControllers[i]||(this.validationErrorsControllers[i]={},i.$on("$destroy",function(){delete $this.validationErrorsControllers[i]})),this.validationErrorsControllers[i][t]||(this.validationErrorsControllers[i][t]=[]),this.validationErrorsControllers[i][t].push(r)},this.addValidationController=function(i,t){this.validationControllers[i]||(this.validationControllers[i]=[],i.$on("$destroy",function(){delete $this.validationControllers[i]})),this.validationControllers[i][t.controllerName]=t,this.validationControllerInitializationCallbacks[i]&&this.validationControllerInitializationCallbacks[i][t.controllerName]&&(angular.forEach(this.validationControllerInitializationCallbacks[i][t.controllerName],function(i){t.afterInitialized(i)}),delete this.validationControllerInitializationCallbacks[i][t.controllerName])},this.getValidationErrorsLocationFactories=function(){return $injector.get("uiFormValidation.validationErrorsLocationFactories")},this.getValidationErrorsModes=function(){return $injector.get("uiFormValidation.validationErrorsModes")},this.getValidationNoticeModes=function(){return $injector.get("uiFormValidation.validationNoticeModes")},this.selectFromScope=function(scope,selector){return selector=selector.trim(),""!==selector||"this"!==selector?eval("scope."+selector):scope},this.afterValidationErrorsControllerInitialized=function(i,t,r){this.validationControllers[i]&&this.validationControllers[i][t]?this.validationControllers[i][t].afterInitialized(r):(this.validationControllerInitializationCallbacks[i]||(this.validationControllerInitializationCallbacks[i]={},i.$on("$destroy",function(){delete $this.validationControllerInitializationCallbacks[i]})),this.validationControllerInitializationCallbacks[i][t]||(this.validationControllerInitializationCallbacks[i][t]=[]),this.validationControllerInitializationCallbacks[i][t].push(r))},this.parseControlErrorsSelectors=function(i){var t={};return angular.forEach(i.split("\\s+"),function(i){var r=/^\s*(.*?)\s*(\{\s*([^\{\}]*?)\s*\})?$/,o=r.exec(i);if(null===o||4!==o.length)throw"Unable to parse input-errors controls.";var n=o[1];t[n]={},t[n].controlName=n,t[n].errors=o[3]?o[3].split(","):void 0,t[n].errors&&(t[n].errors=t[n].errors.map(function(i){return i.trim()}))}),t},this.evalAndParseControlErrorsSelectors=function(i,t){var r=t.split("\\s+");return r=r.map(function(t){return i.$eval(t)}),t=r.join(" "),this.parseControlErrorsSelectors(t)}}),app.provider("uiFormValidation",function(i,t){function r(){this.customValidations=[],this.validationNoticeMode=o.validationNoticeMode,this.validationErrorsMode=o.validationErrorsMode,this.validationErrorsLocation=o.validationErrorsLocation,this.validationErrorsTemplate=o.validationErrorsTemplate,this.formValidations=o.formValidations,this.defaultErrorMessage=o.defaultErrorMessage,angular.forEach(o.supportedValidations,function(i){o.addFormValidation(i)})}var o=this;this.formValidations={},this.validationErrorsTemplate=function(){return'<div class="alert alert-danger"><div ng-repeat="controlErrors in errors"><div class="row" ng-repeat="controlError in controlErrors.errors"><span ng-bind-html="controlError"</span></div></div></div>'},this.defaultErrorMessage=function(i){return'Validation "'+i+'" has failed.'};var n=i.get("uiFormValidation.validationErrorsModes");this.validationErrorsMode=[n.onSubmitAndInvalid,n.onDirtyAndInvalid];var a=i.get("uiFormValidation.validationNoticeModes");this.validationNoticeMode=[a.onSubmitAndInvalid,a.onDirtyAndInvalid],this.validationErrorsLocation="after{this}",this.addFormValidation=function(i){this.formValidations[i.validationName]=i,t.directive.apply(null,[i.validationName,function(){return{restrict:"A",require:["^uiValidation","ngModel"],link:function(t,r,n,a){var e=a[0],l=a[1];if(i.performableValidation&&"function"==typeof i.performableValidation,l.$validators)l.$validators[i.validationName]=function(a,s){var d=a||s;return o.validate(d,e,l,i,t,r,n)},l.$validate();else{var s=l.$modelValue||l.$viewValue,d=o.validate(s,e,l,i,t,r,n);d?l.$setValidity(i.validationName,!0):l.$setValidity(i.validationName,!1),l.$parsers.unshift(function(a){var s=o.validate(a,e,l,i,t,r,n);return l.$setValidity(i.validationName,s),a}),l.$formatters.unshift(function(a){var s=o.validate(a,e,l,i,t,r,n);return l.$setValidity(i.validationName,s),a})}}}}])},this.validate=function(i,t,r,o,n,a,e){var l={uiValidationController:t,ngModelController:r,validation:o,scope:n,attrs:e,element:a};return o.validate(i,l)},this.supportedValidations=i.get("uiFormValidation.supportedValidations"),this.$get=[function(){return new r}]}),app.directive("uiValidation",function(i,t,r,o){var n=1;return{restrict:"A",require:["uiValidation","form"],controller:function(i,r,a){var e=r.get("uiFormValidation.utilsService"),l=e.getValidationErrorsModes(),s=e.getValidationNoticeModes(),d=e.getValidationErrorsLocationFactories(),c=[];angular.forEach(d,function(i){c.push(r.get(i))}),this.controllerName=a.attr("name")||"uiValidation_"+n++,this.initialized=!1,this.isSubmited=!1,this.initializationCallbacks=[],this.formController=void 0,this.formElement=void 0,this.controls={},this.validationNoticeMode=t.validationNoticeMode,this.validationErrorsMode=t.validationErrorsMode,this.validationErrorsLocation=t.validationErrorsLocation,this.validationErrorsTemplate=t.validationErrorsTemplate;var u=this;this.initialize=function(i,t){u.controllerName=i.$name||u.controllerName,u.formController=i,u.formElement=t;var r=i.$addControl;i.$addControl=function(i){r(i),u.addControl(i)},angular.forEach(i,function(i){i&&i.hasOwnProperty("$modelValue")&&u.addControl(i)}),u.initialized=!0,angular.forEach(u.initializationCallbacks,function(i){i()})},this.addControl=function(i){if(i.$name&&""!==i.$name){var t={},r=this.formElement[0].querySelector('[name="'+i.$name+'"]');r=angular.element(r),t.control=i,t.controlElement=r,t.validationNoticeMode=void 0,t.validationErrorsMode=void 0,t.validationErrorsLocation=void 0,t.validationErrorsTemplate=void 0,u.controls[i.$name]=t}},this.afterInitialized=function(i){this.initialized?i():this.initializationCallbacks.push(i)},this.getValidationProperty=function(i,t){if(!u.controls[i])throw"Control with given name "+i+" does not exist.";var r=u.controls[i][t];return r?r:u[t]},this.getValidationErrorsMode=function(i){return this.getValidationProperty(i,"validationErrorsMode")},this.getValidationNoticeMode=function(i){return this.getValidationProperty(i,"validationNoticeMode")},this.getValidationErrorsTemplate=function(i){return this.getValidationProperty(i,"validationErrorsTemplate")},this.getValidationErrorsLocation=function(i){return this.getValidationProperty(i,"validationErrorsLocation")},this.hasControlErrors=function(i){var t=i.controlName,r=i.errors,o=this.controls[t];if(!o)throw"Control with name '"+t+"' does not exist.";var n=!1;return r?angular.forEach(r,function(i){o.control.$error[i]&&(n=!0)}):n=o.control.$invalid,n},this.hasControlsErrors=function(i){var t=!1;return angular.forEach(i,function(i){u.hasControlErrors(i)&&(t=!0)}),t},this.shouldNoticeForControlSelector=function(i){var t=i.controlName,r=this.getValidationNoticeMode(t),o=this.controls[t],n=this.hasControlErrors(i);if(!o)throw"Control with name '"+t+"' does not exist.";var a=!1,e=!1,l=!1;return-1!==r.indexOf(s.onSubmitAndInvalid)&&(a=this.isSubmited&&n),-1!==r.indexOf(s.onDirtyAndInvalid)&&(e=o.control.$dirty&&n),-1!==r.indexOf(s.onInvalid)&&(l=n),a||e||l},this.shouldNoticeForControlSelectors=function(i){var t=!1;return angular.forEach(i,function(i){u.shouldNoticeForControlSelector(i)&&(t=!0)}),t},this.shouldDisplayValidationErrorsForControlSelector=function(i){var t=i.controlName,r=this.getValidationErrorsMode(t),o=this.controls[t],n=this.hasControlErrors(i);if(!o)throw"Control with name '"+t+"' does not exist.";var a=!1,e=!1,s=!1;return-1!==r.indexOf(l.onSubmitAndInvalid)&&(a=this.isSubmited&&n),-1!==r.indexOf(l.onDirtyAndInvalid)&&(e=o.control.$dirty&&n),-1!==r.indexOf(l.onInvalid)&&(s=n),a||e||s},this.shouldDisplayValidationErrorsForControlSelectors=function(i){var t=!1;return angular.forEach(i,function(i){u.shouldDisplayValidationErrorsForControlSelector(i)&&(t=!0)}),t},this.getParsedValidationErrorsLocation=function(i){var t=this.getValidationErrorsLocation(i),r={name:"",args:[]},o=/^\s*(.*?)\s*(\{\s*([^\{\}]*?)\s*\})?$/,n=o.exec(t);if(null===n||4!==n.length)throw"Unable to parse validation errors location - '"+t+"'.";return r.name=n[1].trim(),r.args=n[3]?n[3].split(","):[],r},this.getFormOrControlWrapper=function(i){if(u.formElement[0]===i[0])return u;var t;return angular.forEach(u.controls,function(r){t||r.controlElement[0]!==i[0]||(t=r)}),t},this.injectValidationErrors=function(){angular.forEach(u.controls,function(t,r){var n=angular.element("<div></div>");n.attr("validation-errors",r),n.attr("validation-controller",u.controllerName);var a=u.getParsedValidationErrorsLocation(r);angular.forEach(c,function(r){if(r.name===a.name){var e=null;if(r.compile){if("function"!=typeof r.compile)throw"Validation attribute compile is not function.";e=r.compile(n,a.args)}else e=o(n);e(i,function(o){if(r.link){if("function"!=typeof r.link)throw"Validation attribute link is not function.";r.link(i,o,t,a.args)}})}})})},this.bindSubmitEvent=function(){this.formElement.bind("submit",function(){i.$apply(function(){u.submit()})})},this.validate=function(){angular.forEach(this.controls,function(i){var t=i.control.$viewValue;i.control.$setViewValue(t)})},this.submit=function(){var t=this.formElement.attr("ng-submit");t&&(this.isSubmited=!0,i.$eval(t))}},controllerAs:"uiValidationController",link:function(i,t,o,n){var a=n[0],e=n[1];t.attr("novalidate",!0),a.initialize(e,t),a.injectValidationErrors(),a.bindSubmitEvent();var l=r.get("uiFormValidation.utilsService");l.addValidationController(i,a)}}}),app.directive("validationErrorsMode",function(){return{restrict:"A",require:"^uiValidation",link:function(i,t,r,o){o.afterInitialized(function(){var i=o.getFormOrControlWrapper(t);if(!i)throw"Unable to get element wrapper. Directive validation-errors-mode is not placed probably on the form or input element.";i.validationErrorsMode=r.validationErrorsMode.split("\\s+")})}}}),app.directive("validationNoticeMode",function(){return{restrict:"A",require:"^uiValidation",link:function(i,t,r,o){o.afterInitialized(function(){var i=o.getFormOrControlWrapper(t);if(!i)throw"Unable to get element wrapper. Directive validation-notice-mode is not placed probably on the form or input element.";i.validationNoticeMode=r.validationNoticeMode.split("\\s+")})}}}),app.directive("validationErrorsLocation",function(){return{restrict:"A",require:"^uiValidation",link:function(i,t,r,o){o.afterInitialized(function(){var i=o.getFormOrControlWrapper(t);if(!i)throw"Unable to get element wrapper. Directive validation-errors-location is not placed probably on the form or input element.";i.validationErrorsLocation=r.validationErrorsLocation})}}}),app.directive("validationErrorsTemplate",function(i){return{restrict:"A",require:"uiValidation",link:function(t,r,o,n){var a=i(o.validationErrorsLocation);n.validationErrorsTemplate=a(t)}}});var validationErrorsController=function(i){var t=i.get("uiFormValidation.utilsService");this.parseControlErrorsSelectors=t.parseControlErrorsSelectors};app.controller("ngValidationErrorsController",function(i,t){validationErrorsController.call(this,i);var r=i.get("uiFormValidation.utilsService");this.parseControlErrorsSelectors=function(i){return r.evalAndParseControlErrorsSelectors(t.$parent,i)}});var validationErrorsDirective=function(i,t,r,o,n){var a=r.get("uiFormValidation.utilsService");return{replace:!0,restrict:"A",require:["^?uiValidation",i],template:function(){return n.validationErrorsTemplate()},scope:{uiValidationController:"@",$index:"@"},controller:t,link:function(t,r,o,e){var l=e[0],s=e[1],d=null;d=l?l.controllerName:o.validationController,a.addValidationErrorsController(t,d,s),t.errors={},a.afterValidationErrorsControllerInitialized(t,d,function(){var e=a.validationControllers[t][d],l=s.parseControlErrorsSelectors(o[i]);t.$watch(function(){return e.shouldDisplayValidationErrorsForControlSelectors(l)},function(i){r.toggleClass("hidden",!i)}),angular.forEach(l,function(i){var r=e.controls[i.controlName];if(!r)throw"Undefined control '"+i.controlName+'" to watch.';t.$watchCollection(function(){return r.control.$error},function(){if(i.errors&&i.errors.length<1)return void(t.errors={});var o={};o.control=r.control,o.controlElement=o.controlElement,o.errors={},r.control&&r.control.$error&&angular.forEach(r.control.$error,function(a,l){var s=n.formValidations[l];i.errors&&-1==i.errors.indexOf(l)?delete o.errors[l]:a&&s?o.errors[l]=s.errorMessage(l,t.$parent,r,e):a&&(o.errors[l]=n.defaultErrorMessage(l,t.$parent,r,e))}),t.errors[i.controlName]=o})})})}}};app.directive("validationErrors",function(i,t,r){return validationErrorsDirective("validationErrors","validationErrorsController",i,t,r)}),app.directive("ngValidationErrors",function(i,t,r){return validationErrorsDirective("ngValidationErrors","ngValidationErrorsController",i,t,r)}),app.directive("validationController",function(){return{restrict:"A",link:function(i,t,r){if("string"!=typeof r.validationController)throw"Invalid name of the validation controller."}}}),app.directive("validationSubmit",function(i,t){return{restrict:"A",link:function(i,r,o){var n=t.get("uiFormValidation.utilsService");n.afterValidationErrorsControllerInitialized(i,o.validationSubmit,function(){var t=n.validationControllers[i][o.validationSubmit];r.bind("click",function(){i.$apply(function(){t.submit()})})})}}});var validationNoticeController=function(i){var t=i.get("uiFormValidation.utilsService");this.parseControlErrorsSelectors=t.parseControlErrorsSelectors};app.controller("validationNoticeController",validationNoticeController),app.controller("ngValidationNoticeController",function(i,t){validationNoticeController.call(this,i);var r=i.get("uiFormValidation.utilsService");this.parseControlErrorsSelectors=function(i){return r.evalAndParseControlErrorsSelectors(t.$parent,i)}});var validationNoticeDirective=function(i,t,r,o){o.get("uiFormValidation.utilsService");return{restrict:"A",require:["^uiValidation",i],controller:t,link:function(t,r,o,n){var a=n[0],e=n[1],l=o[i],s=e.parseControlErrorsSelectors(l);a.afterInitialized(function(){t.$watch(function(){return a.shouldNoticeForControlSelectors(s)},function(i){r.toggleClass("has-error",i)})})}}};app.directive("validationNotice",function(i,t){return validationNoticeDirective("validationNotice","validationNoticeController",i,t)}),app.directive("ngValidationNotice",function(i,t){return validationNoticeDirective("ngValidationNotice","ngValidationNoticeController",i,t)}),app.directive("ngName",[function(){return{restrict:"A",require:["ngModel","^form"],link:function(i,t,r,o){o[0].$name=i.$eval(r.ngName)||r.ngName,o[1].$addControl(o[0])}}}]);